<?xml version="1.0" encoding="utf-8"?>
<odoo>

    <record model="res.groups" id="base.group_user">
        <field name="menu_access" eval="[(3, ref('project_resource_calendar.menu_calendar_gantt'))]"/>
    </record>
        <record id="project_resource_calendar.group_resource_calendar_user" model="res.groups">
        <field name="menu_access" eval="[(4, ref('project_resource_calendar.menu_calendar_gantt'))]"/>
    </record>

    <record model="ir.module.category" id="module_category_project_event">
        <field name="name">Project Events</field>
        <field name="description">Helps you manage your Project Events.</field>
        <field name="sequence">10</field>
    </record>

    <record id="group_project_event_user" model="res.groups">
        <field name="name">Project Event User</field>
        <field name="category_id" ref="module_category_project_event"/>
        <field name="implied_ids" eval="[(4, ref('base.group_user'))]"/>
        <field name="users" eval="[(4, ref('base.user_root'))]"/>
    </record>

    <record id="group_project_event_editor" model="res.groups">
        <field name="name">Project Event Editor</field>
        <field name="category_id" ref="module_category_project_event"/>
        <field name="implied_ids" eval="[(4, ref('group_project_event_user'))]"/>
        <field name="users" eval="[(4, ref('base.user_root'))]"/>
        <field name="menu_access"
            eval="[(6, 0,[ref('project_resource_calendar.menu_calendar_gantt'),
            ref('project_resource_calendar.room_sub_menu'),
            ref('project_resource_calendar.instrument_sub_menu'),
            ref('project_resource_calendar.service_sub_menu'),
            ref('resource.menu_resource_config')])]"/>
    </record>

    <record id="group_project_event_manager" model="res.groups">
        <field name="name">Project Event Manager</field>
        <field name="category_id" ref="module_category_project_event"/>
        <field name="implied_ids" eval="[(4, ref('group_project_event_editor'))]"/>
        <field name="users" eval="[(4, ref('base.user_root'))]"/>
        <field name="menu_access" eval="[(4, ref('base.menu_administration'))]"/>
    </record>

    <record model="ir.module.category" id="module_category_event_acad">
        <field name="name">Events ACAD</field>
        <field name="description">Helps you manage your Events with Academic Roles.</field>
        <field name="sequence">20</field>
    </record>

    <record model="ir.module.category" id="module_category_event_prod">
        <field name="name">Events PROD</field>
        <field name="description">Helps you manage your Events with Production Roles.</field>
        <field name="sequence">30</field>
    </record>

    <!-- Record rules -->
    <record id="project_event_own_activity_task_access" model="ir.rule">
        <field name="name">Own event activity-s task</field>
        <field name="model_id" ref="project.model_project_task"/>
        <field name="domain_force">['|', '&amp;',
            ('activity_task_type', 'ilike', 'activity'),
            ('child_ids.employee_ids', 'in', user.employee_ids.id), '&amp;',
            ('activity_task_type', 'ilike', 'task'),
            ('parent_id.child_ids.employee_ids', 'in', user.employee_ids.id),
            ('task_state', 'in', ['option','requested','accepted','done'])]
        </field>
        <field name="groups" eval="[(4, ref('group_project_event_user'))]"/>
        <field eval="0" name="perm_unlink"/>
        <field eval="0" name="perm_write"/>
        <field eval="1" name="perm_read"/>
        <field eval="0" name="perm_create"/>
    </record>

    <record id="project_event_user_project_project_state_draft_not_read" model="ir.rule">
        <field name="name">Project User can read events in states: option, approved, postponed and canceled</field>
        <field name="model_id" ref="project.model_project_project"/>
        <field name="domain_force">['&amp;',
            ('state', 'in', ['option','approved','postponed','canceled']),
            ('task_ids.child_ids.employee_ids', 'in', user.employee_ids.id)
            ]
        </field>
        <field name="groups" eval="[(4, ref('group_project_event_user'))]"/>
        <field eval="0" name="perm_unlink"/>
        <field eval="0" name="perm_write"/>
        <field eval="1" name="perm_read"/>
        <field eval="0" name="perm_create"/>
    </record>

    <record id="project_event_editor_project_project_all_access" model="ir.rule">
        <field name="name">Project Editor can read, create, edit, delete events (project.project)</field>
        <field name="model_id" ref="project.model_project_project"/>
        <field name="domain_force">[(1,'=',1)]</field>
        <field name="groups" eval="[(4, ref('group_project_event_editor'))]"/>
        <field eval="0" name="perm_unlink"/>
        <field eval="0" name="perm_write"/>
        <field eval="1" name="perm_read"/>
        <field eval="0" name="perm_create"/>
    </record>

    <record id="project_event_own_activity_task_access_edit" model="ir.rule">
        <field name="name">Edit permissions of tasks for project event users</field>
        <field name="model_id" ref="project.model_project_task"/>
        <field name="domain_force">[
            ('activity_task_type', 'ilike', 'task'),
            ('parent_id.child_ids.employee_ids', 'in', user.employee_ids.id),
            ('task_state', 'in', ['accepted'])]
        </field>
        <field name="groups" eval="[(4, ref('group_project_event_user'))]"/>
        <field eval="1" name="perm_read"/>
        <field eval="0" name="perm_create"/>
        <field eval="0" name="perm_unlink"/>
        <field eval="1" name="perm_write"/>
    </record>

    <record id="project_event_own_activity_main_task_access_edit" model="ir.rule">
        <field name="name">Edit permissions of main tasks for project event users</field>
        <field name="model_id" ref="project.model_project_task"/>
        <field name="domain_force">[
            ('activity_task_type', 'ilike', 'task'),
            ('is_main_task', 'ilike', 'true'),
            ('parent_id.child_ids.employee_ids', 'in', user.employee_ids.id),
            ('task_state', 'in', ['accepted','requested'])]
        </field>
        <field name="groups" eval="[(4, ref('group_project_event_user'))]"/>
        <field eval="1" name="perm_read"/>
        <field eval="0" name="perm_create"/>
        <field eval="0" name="perm_unlink"/>
        <field eval="1" name="perm_write"/>
    </record>
    
    <record id="project_event_activity_access_edit" model="ir.rule">
        <field name="name">Edit permissions of activities for project event users</field>
        <field name="model_id" ref="project.model_project_task"/>
        <field name="domain_force">[
            ('activity_task_type', 'ilike', 'activity'),
            ('child_ids.employee_ids', 'in', user.employee_ids.id),
            ('task_state', 'in', ['approved'])]
        </field>
        <field name="groups" eval="[(4, ref('group_project_event_user'))]"/>
        <field eval="1" name="perm_read"/>
        <field eval="0" name="perm_create"/>
        <field eval="0" name="perm_unlink"/>
        <field eval="1" name="perm_write"/>
    </record>

    <record id="project_event_own_orphan_task_access" model="ir.rule">
        <field name="name">Own orphan tasks</field>
        <field name="model_id" ref="project.model_project_task"/>
        <field name="domain_force">[
            ('activity_task_type', 'ilike', 'task'),('parent_id','=',False),('employee_ids', 'in', user.employee_ids.id)]
        </field>
        <field name="groups" eval="[(4, ref('group_project_event_user'))]"/>
    </record>

    <record id="project_event_all_activity_task_access" model="ir.rule">
        <field name="name">All event activity-s task</field>
        <field name="model_id" ref="project.model_project_task"/>
        <field name="domain_force">[(1,'=',1)]</field>
        <field name="groups" eval="[(4, ref('group_project_event_editor'))]"/>
    </record>

    <record model="ir.rule" id="project.project_public_members_rule">
        <field name="name">Project: employees: following required for follower-only projects</field>
        <field name="model_id" ref="model_project_project"/>
        <field name="domain_force">['|',
                                        ('privacy_visibility', '!=', 'followers'),
                                        ('message_partner_ids', 'in', [user.partner_id.id])
                                    ]</field>
        <field name="groups" eval="[(4, ref('base.group_user'))]"/>
        <field name="active">False</field>
    </record>

    <record id="project_event_manager_room_all_access" model="ir.rule">
        <field name="name">Project event manager all access to rooms</field>
        <field name="model_id" ref="project_resource_calendar.model_resource_calendar_room"/>
        <field name="domain_force">[(1,'=',1)]</field>
        <field name="groups" eval="[(4, ref('group_project_event_manager'))]"/>
        <field eval="1" name="perm_unlink"/>
        <field eval="1" name="perm_write"/>
        <field eval="1" name="perm_read"/>
        <field eval="1" name="perm_create"/>
    </record>

    <record model="ir.rule" id="project.task_visibility_rule">
        <field name="name">Project/Task: employees: follow required for follower-only projects</field>
        <field name="model_id" ref="model_project_task"/>
        <field name="domain_force">[
        '|',
            ('project_id.privacy_visibility', '!=', 'followers'),
            '|',
                ('project_id.message_partner_ids', 'in', [user.partner_id.id]),
                '|',
                    ('message_partner_ids', 'in', [user.partner_id.id]),
                    # to subscribe check access to the record, follower is not enough at creation
                    ('user_id', '=', user.id)
        ]</field>
        <field name="groups" eval="[(4,ref('base.group_user'))]"/>
        <field name="active">False</field>
    </record>

    <record id="calendar_event_access_project_manager_all" model="ir.rule">
        <field name="name">Calendar Event all access manager</field>
        <field name="model_id" ref="calendar.model_calendar_event"/>
        <field name="domain_force">[(1,'=',1)]</field>
        <field name="groups" eval="[(4, ref('group_project_event_manager'))]"/>
        <field eval="1" name="perm_unlink"/>
        <field eval="1" name="perm_write"/>
        <field eval="1" name="perm_read"/>
        <field eval="1" name="perm_create"/>
    </record>

    <record id="calendar_event_access_project_editor_all" model="ir.rule">
        <field name="name">All Calendar Event read access to editor</field>
        <field name="model_id" ref="calendar.model_calendar_event"/>
        <field name="domain_force">[(1,'=',1)]</field>
        <field name="groups" eval="[(4, ref('group_project_event_editor'))]"/>
        <field eval="0" name="perm_unlink"/>
        <field eval="0" name="perm_write"/>
        <field eval="1" name="perm_read"/>
        <field eval="0" name="perm_create"/>
    </record>
</odoo>
